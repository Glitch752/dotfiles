// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

export type SystemTrayItem = { id: string, title: string | null, 
/**
 * Describes the status of this item or of the associated application.
 *
 * The allowed values for the Status property are:
 * - Passive: The item doesn't convey important information to the user, it can be considered an "idle" status and is likely that visualizations will chose to hide it.
 * - Active: The item is active, is more important that the item will be shown in some way to the user.
 * - `NeedsAttention`: The item carries really important information for the user, such as battery charge running out and is wants to incentive the direct user intervention.
 *   Visualizations should emphasize in some way the items with `NeedsAttention` status.
 */
status: SystrayItemStatus, icon: SystrayIcon, overlay_icon: SystrayIcon | null, attention_icon: SystrayIcon | null, tooltip: SystrayTooltip | null, 
/**
 * If this exists, we should prefer showing the menu instead of activating the top-level item.
 */
menu: SystrayMenu | null, };

export type SystemTrayItems = { [key in string]?: SystemTrayItem };

export type SystrayActivateRequest = { "MenuItem": { address: string, menu_path: string, submenu_id: number, } } | { "Primary": { address: string, x: number, y: number, } } | { "Secondary": { address: string, x: number, y: number, } };

export type SystrayIcon = { "FreedesktopIcon": { theme: string, name: string, } } | { "Pixmaps": { 
/**
 * The icons in this pixmap icon.
 * Applications can provide multiple icons either for animations or
 * multiple resolutions of the same icon.
 * See https://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/Icons/
 * Note that the spec doesn't technically forbid including multiple icons _and_ animations.
 */
icons: Array<SystrayPixmap>, } };

export type SystrayItemStatus = "Unknown" | "Passive" | "Active" | "NeedsAttention";

export type SystrayMenu = { 
/**
 * The identifier for this menu item. Used for activation.
 */
id: number, 
/**
 * Used for activation.
 */
dbus_path: string | null, items: Array<SystrayMenuItem>, };

/**
 * Why is this different from normal systray icons? I don't know...
 */
export type SystrayMenuIcon = { "FreedesktopIcon": { name: string, } } | { "PNGData": Array<number> };

export type SystrayMenuItem = { "Separator": { 
/**
 * The identifier for this menu item. Used for activation and updates.
 */
id: number, visible: boolean, } } | { "Item": { 
/**
 * The identifier for this menu item. Used for activation and updates.
 */
id: number, 
/**
 * The text of the item, except that:
 *  - Two consecutive underscore characters "__" are displayed as a
 *    single underscore,
 *  - Any remaining underscore characters are not displayed at all,
 *  - The first of those remaining underscore characters (unless it is
 *    the last character in the string) indicates that the following
 *    character is the access key.
 * Why is this so complicated lol
 */
label: string | null, 
/**
 * Whether the item can be activated or not.
 * Disabled items should be grayed out or similar.
 */
enabled: boolean, 
/**
 * If the item is visible in the menu.
 */
visible: boolean, 
/**
 * The menu item icon.
 */
icon: SystrayMenuIcon | null, 
/**
 * The shortcut of the item. Each array represents the key press
 * in the list of keypresses. Each list of strings contains a list of
 * modifiers and then the key that is used. The modifier strings
 * allowed are: "Control", "Alt", "Shift" and "Super".
 *
 * - A simple shortcut like Ctrl+S is represented as:
 *   [["Control", "S"]]
 * - A complex shortcut like Ctrl+Q, Alt+X is represented as:
 *   [["Control", "Q"], ["Alt", "X"]]
 */
shortcut: Array<Array<string>> | null, 
/**
 * How the menu item's information should be presented.
 */
toggle_info: SystrayToggleInfo, 
/**
 * The submenu on this item.
 */
submenu: Array<SystrayMenuItem> | null, 
/**
 * The role of this item.
 */
disposition: SystrayMenuItemDisposition, } };

export type SystrayMenuItemDisposition = "Normal" | "Informative" | "Warning" | "Alert";

export type SystrayPixmap = { width: number, height: number, 
/**
 * ARGB32 binary representation of the icon in network byte order.
 * The format of icon data is described in Section Icons
 */
pixels: Array<number>, };

/**
 * Note: The implementation does not itself handle ensuring that only one
 * item in a radio group is set to "on", or that a group does not have
 * "on" and "indeterminate" items simultaneously; maintaining this
 * policy is up to the toolkit wrappers.
 */
export type SystrayToggleInfo = { "Checkmark": boolean } | { "Radio": boolean } | "CannotBeToggled";

export type SystrayTooltip = { icon: SystrayIcon, title: string, description: string, };
